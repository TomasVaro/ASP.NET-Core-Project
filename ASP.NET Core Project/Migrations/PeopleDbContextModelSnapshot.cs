// <auto-generated />
using ASP.NET_Core_Project.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ASP.NET_Core_Project.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class PeopleDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ASP.NET_Core_Project.Models.PersonEF", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PersonId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnName("City")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnName("Phone")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("PersonId");

                    b.ToTable("People");

                    b.HasData(
                        new
                        {
                            PersonId = 1,
                            City = "Stockholm",
                            Name = "Pelle",
                            Phone = "123-456 78 90"
                        },
                        new
                        {
                            PersonId = 2,
                            City = "Umeå",
                            Name = "Lisa",
                            Phone = "098-765 43 21"
                        },
                        new
                        {
                            PersonId = 3,
                            City = "Göteborg",
                            Name = "Gustav",
                            Phone = "023-987 43 25"
                        },
                        new
                        {
                            PersonId = 4,
                            City = "Göteborg",
                            Name = "Åke",
                            Phone = "023-543 78 35"
                        },
                        new
                        {
                            PersonId = 5,
                            City = "Umeå",
                            Name = "Nicklas",
                            Phone = "070-992 12 84"
                        },
                        new
                        {
                            PersonId = 6,
                            City = "Stockholm",
                            Name = "Åsa",
                            Phone = "072-375 16 92"
                        },
                        new
                        {
                            PersonId = 7,
                            City = "Uppsala",
                            Name = "Per",
                            Phone = "023-530 32 39"
                        },
                        new
                        {
                            PersonId = 8,
                            City = "Stockholm",
                            Name = "Lotta",
                            Phone = "123-937 33 94"
                        },
                        new
                        {
                            PersonId = 9,
                            City = "Göteborg",
                            Name = "Mona",
                            Phone = "131-729 38 66"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
